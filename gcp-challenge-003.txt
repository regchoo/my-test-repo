Deploy and Manage Cloud Environments with Google Cloud: Challenge Lab
=====================================================================

# TASK 1 -
# ALL COMMANDS ARE TO BE EXECUTED VIA SSH FROM JUMPHOST

# set region and zone

gcloud config set compute/region us-east1
gcloud config set compute/zone us-east1-b

# use deployment manager to create n/w "kraken-prod-vpc"
# yaml files in /work/dm
# launch ssh session from "kraken-jumphost"
# change directory to "/work/dm"
# change "SET_REGION" to "us-east1" inside file "prod-network.yaml"
# deploy file "prod-network.yaml"
cd /work/dm
gcloud deployment-manager deployments create prod-network --config=prod-network.yaml

# GKE create:
gcloud container clusters create kraken-prod \
    --num-nodes=2 \
    --network=kraken-prod-vpc \
    --subnetwork=kraken-prod-subnet

# copy out credentials from gke master node
gcloud container clusters get-credentials kraken-prod

# k8s yaml files in /work/k8s
cd /work/k8s
for FILES in $(ls *.yaml); do kubectl apply -f $FILES; done

# kubectl apply -f deployment.yaml
# kubectl apply -f service.yaml
=================================================================================
# TASK 2 -
# TASK TO BE DONE USING CLOUD CONSOLE

# set up the admin instance
gcloud config set compute/region us-east1
gcloud config set compute/zone us-east1-b

gcloud compute instances create kraken-admin \
 --network-interface="subnet=kraken-mgmt-subnet" \
 --network-interface="subnet=kraken-prod-subnet"

1. go to cloud console OPERATIONS>MONOTORING>ALERTING
2. CREATE POLICY
3. ADD CONDITION
4. VM Instance (gce_instance)
5. CPU utilization
6. Filter > instance_name > kraken-admin
7. Configuration > Threshold 50% > ADD
8. NEXT > Notification Channel > MANAGE NOTIFICATION CHANNELS > EMAIL > ADD
    (use the lab student's ID,  use whatever for display name)
9. select the display name you created above
10. set Alert name as "kraken-admin"

========================================================================

# TASK 3 -
# TASK DONE USING CLOUD SHELL

gcloud config set compute/zone us-east1-b

# copy out credentials for cluster master node
gcloud container clusters get-credentials spinnaker-tutorial

DECK_POD=$(kubectl get pods -n default \
    -l "cluster=spin-deck" \
    -o jsonpath="{.items[0].metadata.name}")
    
kubectl port-forward -n default $DECK_POD 8080:9000 >> /dev/null &

# click on "preview" icon above cloud shell terminal and select "Preview on port 8080"
Applications > Sample > PIPELINES > 

gcloud config set compute/zone us-east1-b
# pull sample-app from repo
gcloud source repos clone sample-app
cd sample-apply
touch test.txt
git config --global user.email "$(gcloud config get-value account)"
git config --global user.name "Student"
git commit -a -m "added some stuff"
git tag v1.0.1
git push --tags


